#!/bin/sh
###################################################
#     Copyright (C) 2011 Arnaud Malapert.
#
#     This program is free software: you can redistribute it and/or modify                    
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://ww.gnu.org/licenses/>.
###################################################

PROG=`basename $0 .sh`
version() {

    cat <<EOF  
$PROG 0.1
Copyright (C) 2011 Arnaud Malapert.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.
This  is free software: you are free to change and redistribute it.  There is NO WARRANTY, to the extent permitted by law.
     
Written by A. Malapert."
EOF
}

help() {
cat <<EOF
$PROG does nothing interesting except serve as an example for help2man.
     
Usage: $PROG [OPTION] CURRENT ABSOLUTE
     
Options:
  -a, --option      an option
  -b, --another-option[=VALUE]
                         another option
     
  --help        display this help and exit
  --version     output version information and exit
     
Examples:
  foo               do nothing
  foo --option      the same thing, giving --option
     
Report bugs to <arnaud (dot) malapert (at) unice (dot) fr>."
EOF
}

#--------------------------------------------------------------------
# Setup Global Variables
#--------------------------------------------------------------------


#--------------------------------------------------------------------
# Test for prerequisites
#--------------------------------------------------------------------

if [ $1 = "--help" ]; then
    help
    exit 0
elif [ $1 = "--version" ]; then
    version
    exit 0
fi


#--------------------------------------------------------------------
# Do something
#--------------------------------------------------------------------

#http://stackoverflow.com/questions/2564634/bash-convert-absolute-path-into-relative-path-given-a-current-directory
# both $1 and $2 are paths
# returns $2 relative to $1
absolute=`readlink -f "$2"`
current=`readlink -f "$1"`
echo "$absolute\n"
echo "$current\n"
# Perl is magic
# Quoting horror.... spaces cause problems, that's why we need the extra " in here:
relative=$(perl -MFile::Spec -e 'print File::Spec->abs2rel("'"$absolute"'","'"$current"'")')
echo $relative
